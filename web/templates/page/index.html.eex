<body>
  <div class="homepage">
    <div class="nav">

      <div class="container">
        <ul>
          <%= if logged_in?(@conn) do %>
            <li><%= current_user(@conn).name %></li>
            <li><%= link "Logout", to: session_path(@conn, :delete), method: :delete %></li>
          <% else %>
            <li><%= link "Login",    to: session_path(@conn, :new) %></li>
            <li><%= link "Register", to: registration_path(@conn, :new) %></li>
          <% end %>
        </ul>
      </div>
    </div>
    <div class="main">
      <div class="container">
        <div class="logo"></div>
        <h1 class="brand">Dare</h1>
        <p> Looking for a way to waste your money? <br>Look no further. With Dare, you can watch
        stupid people do stupid things. </p>
        <button class="signup-btn">Signup Now</button>
      </div>
      <div class="blurb">
        <div class="container">
          <p> This is the tilted summary and we're tilting it because we're badass and know how
      to do really awesome web development. Hats off to Yenny Cheung if she can actually pull
      it off </p>
        </div>
      </div>
      <div class="feed">
        <div class="videos">
          <div id="player"></div>
          <div id="player2"></div>
          <script>
            // 2. This code loads the IFrame Player API code asynchronously.
            var tag = document.createElement('script');

            tag.src = "https://www.youtube.com/iframe_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

            // 3. This function creates an <iframe> (and YouTube player)
            //    after the API code downloads.
            var player;
            function onYouTubeIframeAPIReady() {
              player = new YT.Player('player', {
                height: '230',
                width: '320',
                videoId: 'M7lc1UVf-VE',
                events: {
                  'onReady': onPlayerReady,
                  'onStateChange': onPlayerStateChange
                }
              });
              player2 = new YT.Player('player2', {
                height: '230',
                width: '320',
                videoId: 'M7lc1UVf-VE',
                events: {
                  'onReady': onPlayerReady,
                  'onStateChange': onPlayerStateChange
                }
              });
            }

            // 4. The API will call this function when the video player is ready.
            function onPlayerReady(event) {
              //event.target.playVideo();
            }

            // 5. The API calls this function when the player's state changes.
            //    The function indicates that when playing a video (state=1),
            //    the player should play for six seconds and then stop.
            var done = false;
            function onPlayerStateChange(event) {
              if (event.data == YT.PlayerState.PLAYING && !done) {
                setTimeout(stopVideo, 6000);
                done = true;
              }
            }
            function stopVideo() {
              player.stopVideo();
            }
        </script>
        </div>
      </div>
      <div class="social-media">
        <div class="container">
          <a><div class="icon facebook"></div></a>
          <a><div class="icon twitter"></div></a>
        </div>
      </div>
    </div>
    <div class="footer">

    </div>
  </div>
</body>
